/*
문제
정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

X가 3으로 나누어 떨어지면, 3으로 나눈다.
X가 2로 나누어 떨어지면, 2로 나눈다.
1을 뺀다.
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.

입력
첫째 줄에 1보다 크거나 같고, 10^6보다 작거나 같은 정수 N이 주어진다.
*/

#include <iostream>
#include <algorithm>

int main(){
	int n;
	scanf("%d", &n);
	int* count = new int[n + 1];
	for (int i = 0; i < n; i++) {
		count[i] = 0;
	}

	for (int i = 2; i <= n; i++) {
		if (i % 3 == 0 && i % 2 == 0) {
			count[i] = std::min(std::min(count[i / 3], count[i / 2]), count[i - 1]) + 1;
		}
		else if (i % 3 != 0 && i % 2 == 0) {
			count[i] = std::min(count[i / 2], count[i - 1]) + 1;
		}
		else if (i % 3 == 0 && i % 2 != 0) {
			count[i] = std::min(count[i / 3], count[i - 1]) + 1;
		}
		else {
			count[i] = count[i - 1] + 1;
		}
	}
	printf("%d", count[n]);

	return 0;
}